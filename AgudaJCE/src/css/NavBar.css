:root {
	--bar-width: 40px;
	--bar-height: 6px;
	--burger-gap: 8px;
	--bar-foreground: #333;
	--bar-background: #fff;
	--animation-time: 0.3s;
	--burger-animation-time: var(--animation-time) ease;
	--burger-height: calc(var(--bar-height) * 3 + var(--burger-gap) * 2);
}

@media screen and (max-width: 768px) {
	:root {
		--bar-width: 32px;
		--bar-height: 4px;
		--burger-gap: 6px;
	}
}

#nav_bar_header {
	font-size: clamp(1rem, 5vw, 2rem);
}

nav.side_bar {
	direction: ltr;
	position: fixed;
	top: 0;
	right: 0;
	width: 400px;
	height: 10vh;
	display: flex;
	align-items: center;
	z-index: 1;
}

nav.side_bar img {
	height: 10vh;
	position: absolute;
	justify-self: start;
	top: 0;
	z-index: 5;
}

.list {
	margin-inline: auto;
	list-style: none;
	display: flex;
}

/* to change in media query */
.list {
	position: absolute;
	clear: both;
	top: 0;
	right: 0;
	padding-inline: 2rem;
	padding-top: calc(10vh + 1rem);
	padding-bottom: 1rem;
	flex-direction: column;
	gap: 1rem;
	width: 100%;
	height: 100vh;
	background: var(--JCE-red-gradient);
	pointer-events: none;
	width: 100%;
	overflow: hidden;
	transform: translateX(100%);
	transition: all var(--burger-animation-time);
}

.burger:has(input:checked) + .list {
	pointer-events: all;
	transform: translateX(0);
}

.list a {
	text-decoration: none;
	color: black;
	font-family: "Heebo", sans-serif;
	font-size: clamp(0.5rem, 20vw, 1.75rem);
	font-weight: 500;
	text-align: right;
	transition: color 0.2s;
}

.list a:hover {
	color: #fff;
}

.burger {
	direction: rtl;
	--x-width: calc(var(--burger-height) * 1.41421356237);
	cursor: pointer;
	position: fixed;
	right: 2rem;
	top: 2rem;
	display: flex;
	flex-direction: column;
	justify-content: center;
	gap: var(--burger-gap);
	z-index: 10;
}

.burger.lower {
	top: 6rem;
}

.burger::before,
.burger input,
.burger::after {
	content: "";
	width: var(--bar-width);
	height: var(--bar-height);
	background-color: var(--bar-foreground);
	border-radius: 9999px;
	transform-origin: right center;
	transition: all var(--burger-animation-time);
	outline: 2px solid var(--bar-background);
}

.burger input {
	appearance: none;
	pointer-events: none;
}

.burger input:checked {
	opacity: 0;
	width: 0;
}

.burger:has(input:checked)::before {
	transform: rotate(-45deg);
	width: var(--x-width);
	translate: 0 calc(var(--bar-height) / -2);
}

.burger:has(input:checked)::after {
	transform: rotate(45deg);
	width: var(--x-width);
	translate: 0 calc(var(--bar-height) / 2);
}
